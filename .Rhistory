rename(Category.Name = 'Category Name')%>%
rename(VolumeL.Sold = 'Volume Sold (Liters)')
plot1<-sales%>%
group_by(Category.Name)%>%
summarize(TotalVol= sum(VolumeL.Sold))%>%
arrange(desc(TotalVol))%>%
head(10)%>%
ggplot(aes(x=reorder(Category.Name,TotalVol), y=TotalVol, fill= Category.Name))+ geom_bar(stat='identity') +labs(x= "Category Name", y = "Total Volume (Liters)") + theme(axis.text.x = element_text(angle = 90))
plot1
ggplot(sales, aes(x=wday(Date, label=TRUE),fill=wday(Date, label=TRUE)))+ geom_bar()+labs(x="Day of Week", y="Num of Orders")
numsales<- sales%>%
group_by(wday(Date, label=TRUE))%>%
count()
numsales
df<- sales%>%
group_by(month=(month(Date, label=TRUE)),Category.Name)%>%
summarize(TotalVol= sum(VolumeL.Sold))%>%
filter(TotalVol>29527)%>%
arrange(desc(TotalVol))
df ## use this to label the points
plot2<- sales%>%
group_by(month=(month(Date, label=TRUE)),Category.Name)%>%
summarize(TotalVol= sum(VolumeL.Sold))%>%
arrange(desc(TotalVol))%>%
ggplot(aes(x=month,y=TotalVol,group=Category.Name))+ geom_line()+ geom_text(data=df,aes(x=month, y=TotalVol, label=Category.Name))
plot2
plot2<- sales%>%
group_by(month=(month(Date, label=TRUE)),Category.Name)%>%
summarize(TotalVol= sum(VolumeL.Sold))%>%
arrange(desc(TotalVol))%>%
ggplot(aes(x=month,y=TotalVol,group=Category.Name))+ geom_line()+ geom_text(aes(x=month, y=TotalVol, label=Category.Name))
plot2
df ## use this to label the points
df<- sales%>%
group_by(Category.Name)%>%
summarize(TotalVol= sum(VolumeL.Sold))%>%
filter(TotalVol>29527)%>%
arrange(desc(TotalVol))
df ## use this to label the points
plot2<- sales%>%
group_by(month=(month(Date, label=TRUE)),Category.Name)%>%
summarize(TotalVol= sum(VolumeL.Sold))%>%
arrange(desc(TotalVol))%>%
ggplot(aes(x=month,y=TotalVol,group=Category.Name))+ geom_line()+ geom_text(aes(x=month, y=TotalVol, label=Category.Name, filter(Category.Name=American Vodkas|Category.Name=Canadian Whiskies)))
plot2<- sales%>%
group_by(month=(month(Date, label=TRUE)),Category.Name)%>%
summarize(TotalVol= sum(VolumeL.Sold))%>%
arrange(desc(TotalVol))%>%
ggplot(aes(x=month,y=TotalVol,group=Category.Name))+ geom_line()+ geom_text(aes(x=month, y=TotalVol, label=Category.Name),filter(Category.Name=American Vodkas|Category.Name=Canadian Whiskies))
plot2<- sales%>%
group_by(month=(month(Date, label=TRUE)),Category.Name)%>%
summarize(TotalVol= sum(VolumeL.Sold))%>%
arrange(desc(TotalVol))%>%
ggplot(aes(x=month,y=TotalVol,group=Category.Name))+ geom_line()+ geom_text(aes(x=month, y=TotalVol, label=Category.Name),filter(Category.Name=American Vodkas,Category.Name=Canadian Whiskies))
plot2<- sales%>%
group_by(month=(month(Date, label=TRUE)),Category.Name)%>%
summarize(TotalVol= sum(VolumeL.Sold))%>%
arrange(desc(TotalVol))%>%
ggplot(aes(x=month,y=TotalVol,group=Category.Name))+ geom_line()+ geom_text(aes(x=month, y=TotalVol, label=Category.Name),filter(Category.Name==American Vodkas,Category.Name==Canadian Whiskies))
plot2<- sales%>%
group_by(month=(month(Date, label=TRUE)),Category.Name)%>%
summarize(TotalVol= sum(VolumeL.Sold))%>%
arrange(desc(TotalVol))%>%
ggplot(aes(x=month,y=TotalVol,group=Category.Name))+ geom_line()+ geom_text(aes(x=month, y=TotalVol, label=Category.Name),filter(Category.Name=="American Vodkas",Category.Name=="Canadian Whiskies"))
sales<-readr::read_csv("2021_Iowa_Liquor_Sales.csv")
sales
library(lubridate)
library(tidyverse)
library(ggplot2)
sales$Date <- as.Date(sales$Date, format = "%m/%d/%y")
sales
sales%>%
separate("Store Location", into= c("POINT","Location"), sep='\\(')%>%
separate("Location", into= c("Latitude", "Longitude"), sep='\\ ' )%>%
separate("Longitude", into= c("Longitude"), sep='\\)')%>%
subset(select = -c(POINT))
sales<-sales%>%
rename(Category.Name = 'Category Name')%>%
rename(VolumeL.Sold = 'Volume Sold (Liters)')
plot1<-sales%>%
group_by(Category.Name)%>%
summarize(TotalVol= sum(VolumeL.Sold))%>%
arrange(desc(TotalVol))%>%
head(10)%>%
ggplot(aes(x=reorder(Category.Name,TotalVol), y=TotalVol, fill= Category.Name))+ geom_bar(stat='identity') +labs(x= "Category Name", y = "Total Volume (Liters)") + theme(axis.text.x = element_text(angle = 90))
plot1
ggplot(sales, aes(x=wday(Date, label=TRUE),fill=wday(Date, label=TRUE)))+ geom_bar()+labs(x="Day of Week", y="Num of Orders")
numsales<- sales%>%
group_by(wday(Date, label=TRUE))%>%
count()
numsales
plot2<- sales%>%
group_by(month=(month(Date, label=TRUE)),Category.Name)%>%
summarize(TotalVol= sum(VolumeL.Sold))%>%
arrange(desc(TotalVol))%>%
ggplot(aes(x=month,y=TotalVol,group=Category.Name))+ geom_line()+ geom_text(aes(x=month, y=TotalVol, label=Category.Name),filter(Category.Name=="American Vodkas",Category.Name=="Canadian Whiskies"))
plot2<- sales%>%
group_by(month=(month(Date, label=TRUE)),Category.Name)%>%
summarize(TotalVol= sum(VolumeL.Sold))%>%
arrange(desc(TotalVol))%>%
ggplot(aes(x=month,y=TotalVol,group=Category.Name))+ geom_line()+ geom_text(data=sales,aes(x=month, y=TotalVol, label=Category.Name),filter(Category.Name=="American Vodkas",Category.Name=="Canadian Whiskies"))
plot2<- sales%>%
group_by(month=(month(Date, label=TRUE)),Category.Name)%>%
summarize(TotalVol= sum(VolumeL.Sold))%>%
arrange(desc(TotalVol))%>%
ggplot(aes(x=month,y=TotalVol,group=Category.Name))+ geom_line()+ geom_text(data=sales,aes(x=month, y=TotalVol, label=Category.Name),filter(Category.Name=="American Vodkas",Category.Name=="Canadian Whiskies"))
plot2
plot2<- sales%>%
group_by(month=(month(Date, label=TRUE)),Category.Name)%>%
summarize(TotalVol= sum(VolumeL.Sold))%>%
arrange(desc(TotalVol))%>%
ggplot(aes(x=month,y=TotalVol,group=Category.Name))+ geom_line()+ geom_text(data=sales,aes(x=month, y=TotalVol, label=Category.Name),filter(Category.Name=="American Vodkas",Category.Name=="Canadian Whiskies"))
plot2<- sales%>%
group_by(month=(month(Date, label=TRUE)),Category.Name)%>%
summarize(TotalVol= sum(VolumeL.Sold))%>%
arrange(desc(TotalVol))%>%
ggplot(aes(x=month,y=TotalVol,group=Category.Name))+ geom_line()
plot2
df<- sales%>%
group_by(Category.Name)%>%
summarize(TotalVol= sum(VolumeL.Sold))%>%
filter(TotalVol>29527)%>%
arrange(desc(TotalVol))
df ## use this to label the points
plot2<- sales%>%
group_by(month=(month(Date, label=TRUE)),Category.Name)%>%
summarize(TotalVol= sum(VolumeL.Sold))%>%
arrange(desc(TotalVol))%>%
ggplot(aes(x=month,y=TotalVol,group=Category.Name))+ geom_line()+ geom_text(data=df,aes(x=month, y=TotalVol, label=Category.Name),filter(df$Category.Name=="American Vodkas",df$Category.Name=="Canadian Whiskies"))
plot2<- sales%>%
group_by(month=(month(Date, label=TRUE)),Category.Name)%>%
summarize(TotalVol= sum(VolumeL.Sold))%>%
arrange(desc(TotalVol))%>%
ggplot(aes(x=month,y=TotalVol,group=Category.Name))+ geom_line()+ geom_text(data=df,aes(x=month, y=TotalVol, label=Category.Name),filter(df$Category.Name=="American Vodkas"|df$Category.Name=="Canadian Whiskies"))
plot2<- sales%>%
group_by(month=(month(Date, label=TRUE)),Category.Name)%>%
summarize(TotalVol= sum(VolumeL.Sold))%>%
arrange(desc(TotalVol))%>%
ggplot(aes(x=month,y=TotalVol,group=Category.Name))+ geom_line()+ geom_text(data=df,aes(x=month, y=TotalVol, label=Category.Name),filter(df,Category.Name=="American Vodkas"|Category.Name=="Canadian Whiskies"))
plot2<- sales%>%
group_by(month=(month(Date, label=TRUE)),Category.Name)%>%
summarize(TotalVol= sum(VolumeL.Sold))%>%
arrange(desc(TotalVol))%>%
ggplot(aes(x=month,y=TotalVol,group=Category.Name))+ geom_line()
plot2
math<-read.csv(file.choose(),header=T)
head(math)
tail(math)
math$x1mtheff[math$x1mtheff==-9] <- NA
math$x1mtheff[math$x1mtheff==-8] <- NA
math$x1mtheff[math$x1mtheff==-7] <- NA
library(car)
math$x1mtheff[math$x1mtheff==-9] <- NA
math$x1mtheff[math$x1mtheff==-8] <- NA
math$x1mtheff[math$x1mtheff==-7] <- NA
math$x1mthid[math$x1mthid==-9] <- NA
math$x1mthid[math$x1mthid==-8] <- NA
math$x1txmth[math$x1txmth==-8] <- NA
math$x1par1emp[math$x1par1emp==-9] <- NA
math$x1par1emp[math$x1par1emp==-8] <- NA
math$x1par1emp[math$x1par1emp==-7] <- NA
math$x1macc[math$x1macc==-8] <- NA
math$x1sex[math$x1sex==-9] <- NA
math$x1par1emp <- as.factor(math$x1par1emp)
math$x1par1emp <- recode(math$x1par1emp, c(1)=0; c(2)=1; c(3)=2; c(4)=3)
math$x1par1emp <- recode(math$x1par1emp, c(1)="0"; c(2)=1; c(3)=2; c(4)=3)
math$x1par1emp <- recode(math$x1par1emp, c(1)=0)
math$x1par1emp <- recode(math$x1par1emp, c(1)==0)
math$x1par1emp <- recode(math$x1par1emp, c(1)==0; c(2)==1; c(3)==2; c(4)==3)
math$x1par1emp <- recode(math$x1par1emp, c(1)='0'; c(2)='1'; c(3)='2'; c(4)='3')
math$x1macc <- as.factor(math$x1macc)
math$x1sex <- as.factor(math$x1sex)
math$x1sex <- recode(math$x1sex, c(1)=0; c(2)=1)
math$x1par1emp <- recode(math$x1par1emp, c(1)=0, c(2)=1, c(3)=2, c(4)=3)
math$x1par1emp <- recode(math$x1par1emp, c(1)=0)
math$x1par1emp <- recode(math$x1par1emp, c[1]=0)
math$x1par1emp <- recode(math$x1par1emp, c(1]==0)
math$x1par1emp <- recode(math$x1par1emp, c(1)==0)
math$x1par1emp <- recode(math$x1par1emp, c(1)==0, c(2)==1, c(3)==2, c(4)==3)
math$x1macc <- as.factor(math$x1macc)
math$x1sex <- as.factor(math$x1sex)
math$x1sex <- recode(math$x1sex, c(1)==0; c(2)==1)
math$x1sex <- recode(math$x1sex, c(1)==0, c(2)==1)
math
math<-read.csv(file.choose(),header=T)
head(math)
tail(math)
library(car)
math$x1mtheff[math$x1mtheff==-9] <- NA
math$x1mtheff[math$x1mtheff==-8] <- NA
math$x1mtheff[math$x1mtheff==-7] <- NA
math$x1mthid[math$x1mthid==-9] <- NA
math$x1mthid[math$x1mthid==-8] <- NA
math$x1txmth[math$x1txmth==-8] <- NA
math$x1par1emp[math$x1par1emp==-9] <- NA
math$x1par1emp[math$x1par1emp==-8] <- NA
math$x1par1emp[math$x1par1emp==-7] <- NA
math$x1macc[math$x1macc==-8] <- NA
math$x1sex[math$x1sex==-9] <- NA
math$x1par1emp <- as.factor(math$x1par1emp)
math$x1par1emp <- recode(math$x1par1emp, c(1)==0, c(2)==1, c(3)==2, c(4)==3)
math$x1macc <- as.factor(math$x1macc)
math$x1sex <- as.factor(math$x1sex)
math$x1sex <- recode(math$x1sex, c(1)==0, c(2)==1)
math
math$x1sex <- recode(math$x1sex, c(1)=0, c(2)=1)
math$x1sex <- recode(math$x1sex, c(1)="0", c(2)="1")
math$x1sex <- recode(math$x1sex, c(1)=="0", c(2)=="1")
math
math<-read.csv(file.choose(),header=T)
head(math)
tail(math)
library(car)
#Change values of -7, -8, and -9 to missing values (NA)
math$x1mtheff[math$x1mtheff==-9] <- NA
math$x1mtheff[math$x1mtheff==-8] <- NA
math$x1mtheff[math$x1mtheff==-7] <- NA
math$x1mthid[math$x1mthid==-9] <- NA
math$x1mthid[math$x1mthid==-8] <- NA  ##Math identity did not have any -7's
math$x1txmth[math$x1txmth==-8] <- NA  ##Math scores did not have any -7's or -9's
math$x1par1emp[math$x1par1emp==-9] <- NA
math$x1par1emp[math$x1par1emp==-8] <- NA
math$x1par1emp[math$x1par1emp==-7] <- NA
math$x1macc[math$x1macc==-8] <- NA  ##Test Accommodations did not have any -7's or -9's
math$x1sex[math$x1sex==-9] <- NA  ##Sex did not have any -7's or -8's
##First parents employment (x1par1emp)
##First parents employment (x1par1emp):
## 1=never worked for pay,
## 2=not currently working for pay,
##3=currently working part time (< 35 hrs/wk),
## 4=currently working full time (>=35 hrs/wk)
##Force 1st parents employment to be coded as categorical:
math$x1par1emp <- as.factor(math$x1par1emp)
##Recode 1st parents employment to be 0-3 instead of 1-4
##First parents employment (x1par1emp): 0=never worked for pay,
## 1=not currently working for pay,
##2=currently working part time (< 35 hrs/wk),
## 3=currently working full time (>=35 hrs/wk)
##This code requires the car package.
math$x1par1emp <- recode(math$x1par1emp, "c(1)=0; c(2)=1; c(3)=2; c(4)=3")
##Test accommodations (x1macc): 0=no accommodations used, 1=accommodations used
##Force Test accommodations to be coded as categorical:
math$x1macc <- as.factor(math$x1macc)
##Sex (x1sex): 1=male, 2=female
##Force Sex to be coded as categorical:
math$x1sex <- as.factor(math$x1sex)
##Recode x1sex 0-1 instead of 1-2
##This code requires the car package.
math$x1sex <- recode(math$x1sex, "c(1)=0; c(2)=1")
M1 <- glm(x1macc ~ x1sex + x1mtheff, family = binomial(link = logit), data = math)
M1
math <- na.omit(math)
M1 <- glm(x1macc ~ x1sex + x1mtheff, family = binomial(link = logit), data = math)
M1
m1 <- glm(x1macc ~ x1sex + x1mtheff, family = binomial(link = logit), data = math)
math <- na. omit(math)
math <- na.omit(math)
m1 <- glm(x1macc ~ x1sex + x1mtheff, family = binomial(link = logit), data = math)
summary(m1)
exp(-0.26949)
summary(m1)
drop1(M1, test='LRT')
mean(math$x1mtheff)
mean(math$x1mtheff)
predict(object = m2, newdata = data.frame(x1sex = "0", x1mtheff = 0.09156504, x1par1emp = "3"), type = "response")
mean(math$x1mtheff)
predict(object = m2, newdata = data.frame(x1sex = "0", x1mtheff = 0.09156504, x1par1emp = "3"), type = "response")
math<-read.csv(file.choose(),header=T)
head(math)
tail(math)
library(car)
#Change values of -7, -8, and -9 to missing values (NA)
math$x1mtheff[math$x1mtheff==-9] <- NA
math$x1mtheff[math$x1mtheff==-8] <- NA
math$x1mtheff[math$x1mtheff==-7] <- NA
math$x1mthid[math$x1mthid==-9] <- NA
math$x1mthid[math$x1mthid==-8] <- NA  ##Math identity did not have any -7's
math$x1txmth[math$x1txmth==-8] <- NA  ##Math scores did not have any -7's or -9's
math$x1par1emp[math$x1par1emp==-9] <- NA
math$x1par1emp[math$x1par1emp==-8] <- NA
math$x1par1emp[math$x1par1emp==-7] <- NA
math$x1macc[math$x1macc==-8] <- NA  ##Test Accommodations did not have any -7's or -9's
math$x1sex[math$x1sex==-9] <- NA  ##Sex did not have any -7's or -8's
##First parents employment (x1par1emp)
##First parents employment (x1par1emp):
## 1=never worked for pay,
## 2=not currently working for pay,
##3=currently working part time (< 35 hrs/wk),
## 4=currently working full time (>=35 hrs/wk)
##Force 1st parents employment to be coded as categorical:
math$x1par1emp <- as.factor(math$x1par1emp)
##Recode 1st parents employment to be 0-3 instead of 1-4
##First parents employment (x1par1emp): 0=never worked for pay,
## 1=not currently working for pay,
##2=currently working part time (< 35 hrs/wk),
## 3=currently working full time (>=35 hrs/wk)
##This code requires the car package.
math$x1par1emp <- recode(math$x1par1emp, "c(1)=0; c(2)=1; c(3)=2; c(4)=3")
##Test accommodations (x1macc): 0=no accommodations used, 1=accommodations used
##Force Test accommodations to be coded as categorical:
math$x1macc <- as.factor(math$x1macc)
##Sex (x1sex): 1=male, 2=female
##Force Sex to be coded as categorical:
math$x1sex <- as.factor(math$x1sex)
##Recode x1sex 0-1 instead of 1-2
##This code requires the car package.
math$x1sex <- recode(math$x1sex, "c(1)=0; c(2)=1")
math <- na.omit(math)
m1 <- glm(x1macc ~ x1sex + x1mtheff, family = binomial(link = logit), data = math)
summary(m1)
exp(-0.26949)
drop1(M1, test='LRT')
m2 <- glm(x1macc ~ x1sex + x1mtheff + x1par1emp, family = binomial(link = logit), data = math)
anova(M1,M2,test='Chisq')
mean(math$x1mtheff)
predict(object = m2, newdata = data.frame(x1sex = "0", x1mtheff = 0.09156504, x1par1emp = "3"), type = "response")
quantile(math$x1mtheff, .1)
exp(predict(object = M2, newdata = data.frame(x1sex = "1", x1mtheff = -1.22, x1par1emp = "2"), type = "link"))
math<-read.csv(file.choose(),header=T)
head(math)
tail(math)
library(car)
#Change values of -7, -8, and -9 to missing values (NA)
math$x1mtheff[math$x1mtheff==-9] <- NA
math$x1mtheff[math$x1mtheff==-8] <- NA
math$x1mtheff[math$x1mtheff==-7] <- NA
math$x1mthid[math$x1mthid==-9] <- NA
math$x1mthid[math$x1mthid==-8] <- NA  ##Math identity did not have any -7's
math$x1txmth[math$x1txmth==-8] <- NA  ##Math scores did not have any -7's or -9's
math$x1par1emp[math$x1par1emp==-9] <- NA
math$x1par1emp[math$x1par1emp==-8] <- NA
math$x1par1emp[math$x1par1emp==-7] <- NA
math$x1macc[math$x1macc==-8] <- NA  ##Test Accommodations did not have any -7's or -9's
math$x1sex[math$x1sex==-9] <- NA  ##Sex did not have any -7's or -8's
##First parents employment (x1par1emp)
##First parents employment (x1par1emp):
## 1=never worked for pay,
## 2=not currently working for pay,
##3=currently working part time (< 35 hrs/wk),
## 4=currently working full time (>=35 hrs/wk)
##Force 1st parents employment to be coded as categorical:
math$x1par1emp <- as.factor(math$x1par1emp)
##Recode 1st parents employment to be 0-3 instead of 1-4
##First parents employment (x1par1emp): 0=never worked for pay,
## 1=not currently working for pay,
##2=currently working part time (< 35 hrs/wk),
## 3=currently working full time (>=35 hrs/wk)
##This code requires the car package.
math$x1par1emp <- recode(math$x1par1emp, "c(1)=0; c(2)=1; c(3)=2; c(4)=3")
##Test accommodations (x1macc): 0=no accommodations used, 1=accommodations used
##Force Test accommodations to be coded as categorical:
math$x1macc <- as.factor(math$x1macc)
##Sex (x1sex): 1=male, 2=female
##Force Sex to be coded as categorical:
math$x1sex <- as.factor(math$x1sex)
##Recode x1sex 0-1 instead of 1-2
##This code requires the car package.
math$x1sex <- recode(math$x1sex, "c(1)=0; c(2)=1")
math <- na.omit(math)
m1 <- glm(x1macc ~ x1sex + x1mtheff, family = binomial(link = logit), data = math)
summary(m1)
exp(-0.26949)
drop1(M1, test='LRT')
m2 <- glm(x1macc ~ x1sex + x1mtheff + x1par1emp, family = binomial(link = logit), data = math)
anova(M1,M2,test='Chisq')
quantile(math$x1mtheff, .1)
exp(predict(object = M2, newdata = data.frame(x1sex = "1", x1mtheff = -1.22, x1par1emp = "2"), type = "link"))
exp(predict(object = m2, newdata = data.frame(x1sex = "1", x1mtheff = -1.22, x1par1emp = "2"), type = "link"))
acc <- read.csv("https://raw.githubusercontent.com/xdaiISU/ds202materials/master/hwlabs/fars2017/accident.csv", stringsAsFactors = FALSE)
acc
# repeat for the person data
pers<- read.csv("https://raw.githubusercontent.com/xdaiISU/ds202materials/master/hwlabs/fars2017/person.csv", stringsAsFactors = FALSE)
pers
acc```
acc
pers
pers
acc <- read.csv("https://raw.githubusercontent.com/xdaiISU/ds202materials/master/hwlabs/fars2017/accident.csv", stringsAsFactors = FALSE)
acc <- read.csv("https://raw.githubusercontent.com/xdaiISU/ds202materials/master/hwlabs/fars2017/accident.csv", stringsAsFactors = FALSE)
# repeat for the person data
pers<- read.csv("https://raw.githubusercontent.com/xdaiISU/ds202materials/master/hwlabs/fars2017/person.csv", stringsAsFactors = FALSE)
str
df1<- dataframe(INJ_SEV= 4)
df1<- data.frame(INJ_SEV= 4)
df1
df1<- data.frame(INJ_SEV)
df1<- data.frame(pers$INJ_SEV)
df1
pers
df1<- data.frame(pers$INJ_SEV=4)
df1<- data.frame(pers$INJ_SEV==4)
df1
df1<- data.frame(pers$INJ_SEV="4")
df1<- data.frame(pers$INJ_SEV=="4")
df1
df1<- data.frame(filter(INJ_SEV==4))
acc
df1<- data.frame(filter(pers$INJ_SEV==4))
df1<- data.frame(filter(pers$INJ_SEV="4"))
df1<- data.frame(filter(pers$INJ_SEV=="4"))
df1<- data.frame(filter(pers$INJ_SEV==4))
df1<- data.frame(data=pers,STATE)
df1<- data.frame(data=pers,STATE)
df1<- data.frame(pers,STATE)
df1<- pers[,c("STATE", "AGE", "SEX", "PER_TYP", "INJ_SEV")]
df1
pers
df1<- pers[,c("ST_CASE","STATE", "AGE", "SEX", "PER_TYP", "INJ_SEV")]
df1
df2<- acc[,c("PMAKE")]
df2<- pers[,c("PMAKE")]
df2<- pers[,c("PMAKE")]
pers
df2<- pers[,c("MAKE")]
df2<- pers[,c("MAKE")]
df
df2
df2<- pers[,c("MAKE", "INJ_SEV")]
df2
df2<- pers[,c("STATE","MAKE", "INJ_SEV")]
df2
VEH<- df2%>%
group_by(MAKE, STATE)
VEh
VEH
VEH<- df2%>%
group_by(MAKE, STATE)%>%
summarize()
VEH
df2
VEH<- df2%>%
group_by(MAKE, STATE)%>%
summarize(filter(INJ_SEV==4))
VEH<- df2%>%
group_by(MAKE, STATE)%>%
summarize(filter(INJ_SEV=='4'))
VEH<- df2%>%
group_by(MAKE, STATE)%>%
summarize(filter(INJ_SEV=="4"))
VEH<- df2%>%
group_by(MAKE, STATE)%>%
summarize(filter(INJ_SEV="4"))
VEH<- df2%>%
group_by(MAKE, STATE)%>%
summarize(filter(INJ_SEV=4))
str(df2)
df2$STATE <- as.factor(df2$STATE)
df2$MAKE <- as.factor(df2$MAKE)
df2$INJ_SEV <- as.factor(df2$INJ_SEV)
VEH<- df2%>%
group_by(MAKE, STATE)%>%
summarize(filter(INJ_SEV=4))
VEH<- df2%>%
group_by(MAKE, STATE)%>%
summarize(filter(INJ_SEV="4"))
VEH<- df2%>%
group_by(MAKE, STATE)%>%
summarize(filter(INJ_SEV=="4"))
VEH<- df2%>%
group_by(MAKE, STATE)%>%
summarize(filter(INJ_SEV==4))
VEH<- df2%>%
group_by(MAKE, STATE)%>%
filter(INJ_SEV==4)%>%
summarize()
VEH
VEH<- df2%>%
group_by(MAKE, STATE)%>%
filter(INJ_SEV==4)%>%
count()%>%
summarize()
VEH
VEH<- df2%>%
group_by(MAKE, STATE)%>%
filter(INJ_SEV==4)%>%
count(MAKE)%>%
summarize()
VEH
VEH<- df2%>%
group_by(MAKE, STATE)%>%
filter(INJ_SEV==4)%>%
summarize()
VEH<- df2%>%
group_by(MAKE, STATE)%>%
filter(INJ_SEV==4)%>%
summarize()%>%
count(MAKE)
VEH
VEH<- df2%>%
group_by(MAKE, STATE)%>%
filter(INJ_SEV==4)%>%
summarize()%>%
count(MAKE)%>%
arrange(desc(n))
VEH
VEH<- df2%>%
group_by(MAKE, STATE)%>%
filter(INJ_SEV==4)%>%
summarize()%>%
count()%>%
arrange(desc(n))
VEH
GSA<- readxl::read_xlsx("FRPP_GLC_-_United_StatesNov42021.xlsx")
setwd("C:/Users/Caroly/Desktop/DS 202/Labs/lab 5")
GSA<- readxl::read_xlsx("FRPP_GLC_-_United_StatesNov42021.xlsx")
GLC<- readxl::read_xlsx("FRPP_GLC_-_United_StatesNov42021.xlsx")
GLC
library(ggplot2)
ggplot(states, aes(x=long,y=lat))+geom_path(aes(group=group))
library(tidyverse)
library(lubridate)
state<- map_data('state')
